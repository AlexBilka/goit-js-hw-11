{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// ================ import modules ================\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// ================ global variables ================\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst timerValue = document.querySelectorAll('.value');\n\nstartBtn.disabled = true;\nlet userSelectedDate;\n\n// ================ flatpickr module initialization ================\n\nflatpickr(inputDate, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    checkDate();\n  },\n});\n\n// ================ selected date VALIDATION ================\n\nfunction checkDate() {\n  const validDate = userSelectedDate.getTime() - Date.now();\n  if (validDate < 1) {\n    iziToast.error({\n      position: 'topRight',\n      message: 'Please choose a date in the future',\n    });\n    startBtn.disabled = true;\n  } else {\n    startBtn.disabled = false;\n  }\n}\n\n// ================ 'START' button event ================\n\nstartBtn.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  const intervalId = setInterval(() => {\n    let timeInterval = userSelectedDate.getTime() - Date.now();\n    if (timeInterval < 1) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    // if (timeInterval >= 60 * 1000 * 10) {\n    //   timeInterval += 60 * 60 * 1000; // compensation for the lost hour\n    // }\n\n    startBtn.disabled = true; // elements is disabled\n    if (timeInterval > 1000) {\n      inputDate.disabled = true;\n    } else {\n      inputDate.disabled = false;\n    }\n\n    const timerToMs = convertMs(timeInterval);\n\n    for (let i = 0; i < timerValue.length; i += 1) {\n      timerValue[i].textContent = addLeadingZero(\n        timerToMs[Object.keys(timerToMs)[i]] // add values to the markup\n      );\n    }\n  }, 1000);\n}\n\n// ================ formating values to '00' ================\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\n// ================ convert DATE to MS ================\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputDate","startBtn","timerValue","userSelectedDate","flatpickr","selectedDates","checkDate","iziToast","startTimer","intervalId","timeInterval","timerToMs","convertMs","i","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"+IAUA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,iBAAiB,QAAQ,EAErDD,EAAS,SAAW,GACpB,IAAIE,EAIJC,EAAUJ,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCC,GACD,CACH,CAAC,EAID,SAASA,GAAY,CACDH,EAAiB,QAAS,EAAG,KAAK,IAAG,EACvC,GACdI,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACf,CAAK,EACDN,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAExB,CAIAA,EAAS,iBAAiB,QAASO,CAAU,EAE7C,SAASA,GAAa,CACpB,MAAMC,EAAa,YAAY,IAAM,CACnC,IAAIC,EAAeP,EAAiB,QAAS,EAAG,KAAK,IAAG,EACxD,GAAIO,EAAe,EAAG,CACpB,cAAcD,CAAU,EACxB,MACD,CAMDR,EAAS,SAAW,GAChBS,EAAe,IACjBV,EAAU,SAAW,GAErBA,EAAU,SAAW,GAGvB,MAAMW,EAAYC,EAAUF,CAAY,EAExC,QAASG,EAAI,EAAGA,EAAIX,EAAW,OAAQW,GAAK,EAC1CX,EAAWW,CAAC,EAAE,YAAcC,EAC1BH,EAAU,OAAO,KAAKA,CAAS,EAAEE,CAAC,CAAC,CAC3C,CAEG,EAAE,GAAI,CACT,CAIA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAIA,SAASH,EAAUI,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}